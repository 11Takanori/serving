/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/google/elafros/pkg/apis/ela/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RevisionTemplateLister helps list RevisionTemplates.
type RevisionTemplateLister interface {
	// List lists all RevisionTemplates in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RevisionTemplate, err error)
	// RevisionTemplates returns an object that can list and get RevisionTemplates.
	RevisionTemplates(namespace string) RevisionTemplateNamespaceLister
	RevisionTemplateListerExpansion
}

// revisionTemplateLister implements the RevisionTemplateLister interface.
type revisionTemplateLister struct {
	indexer cache.Indexer
}

// NewRevisionTemplateLister returns a new RevisionTemplateLister.
func NewRevisionTemplateLister(indexer cache.Indexer) RevisionTemplateLister {
	return &revisionTemplateLister{indexer: indexer}
}

// List lists all RevisionTemplates in the indexer.
func (s *revisionTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.RevisionTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RevisionTemplate))
	})
	return ret, err
}

// RevisionTemplates returns an object that can list and get RevisionTemplates.
func (s *revisionTemplateLister) RevisionTemplates(namespace string) RevisionTemplateNamespaceLister {
	return revisionTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RevisionTemplateNamespaceLister helps list and get RevisionTemplates.
type RevisionTemplateNamespaceLister interface {
	// List lists all RevisionTemplates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RevisionTemplate, err error)
	// Get retrieves the RevisionTemplate from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RevisionTemplate, error)
	RevisionTemplateNamespaceListerExpansion
}

// revisionTemplateNamespaceLister implements the RevisionTemplateNamespaceLister
// interface.
type revisionTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RevisionTemplates in the indexer for a given namespace.
func (s revisionTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RevisionTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RevisionTemplate))
	})
	return ret, err
}

// Get retrieves the RevisionTemplate from the indexer for a given namespace and name.
func (s revisionTemplateNamespaceLister) Get(name string) (*v1alpha1.RevisionTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("revisiontemplate"), name)
	}
	return obj.(*v1alpha1.RevisionTemplate), nil
}
